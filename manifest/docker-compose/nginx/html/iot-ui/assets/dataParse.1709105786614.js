import{_ as _sfc_main$1}from"./index.170910578661426.js";import{a as api}from"./index.170910578661421.js";import{d as defineComponent,h as ref,k as onMounted,a as createElementBlock,b as createBaseVNode,Y as createVNode,T as withDirectives,R as createBlock,S as withCtx,F as Fragment,aC as useRoute,ah as resolveComponent,ar as resolveDirective,o as openBlock,W as createTextVNode}from"./vue.1709105786614.js";import{_ as _export_sfc,E as ElMessage}from"./index.1709105786614.js";var dataParse_vue_vue_type_style_index_0_scoped_true_lang="";const _hoisted_1={"class":"flex"},_hoisted_2={"class":"mock",style:{width:"300px","margin-left":"20px"}},_sfc_main=defineComponent({__name:"dataParse",props:{script:String},emits:["updateScript"],setup(__props,{emit:__emit}){const route=useRoute(),emit=__emit,props=__props,inputData=ref(""),outputData=ref(""),content=ref(""),mirrorRef=ref();function saveCode(){const funStr=mirrorRef.value.getValue();if(""===funStr)return toSave(funStr);try{eval("("+funStr+")"),toSave(funStr)}catch(error){ElMessage.error("语法校验未通过")}}function toSave(e){api.product.script({key:route.params.id,scriptInfo:e}).then((()=>{ElMessage.success("保存成功"),emit("updateScript",e)}))}function mock(){if(!inputData.value)return ElMessage.error("请输入参数");const funStr=mirrorRef.value.getValue();if(""===funStr)return ElMessage.error("请先输入可执行脚本");try{const fun=eval("("+funStr+")");try{const e=fun(JSON.parse(inputData.value));outputData.value="object"==typeof e?JSON.stringify(e,null,2):e}catch{const e=fun(inputData.value);outputData.value="object"==typeof e?JSON.stringify(e,null,2):e}}catch(error){ElMessage.error("数据解析脚本语法校验未通过或参数类型有误")}}return onMounted((()=>{content.value=props.script})),(e,t)=>{const a=resolveComponent("el-input"),r=resolveComponent("el-button"),o=resolveDirective("auth");return openBlock(),createElementBlock(Fragment,null,[createBaseVNode("div",_hoisted_1,[createVNode(_sfc_main$1,{"class":"params flex1",ref_key:"mirrorRef",ref:mirrorRef,mode:"",content:content.value},null,8,["content"]),createBaseVNode("div",_hoisted_2,[createVNode(a,{"class":"input",modelValue:inputData.value,"onUpdate:modelValue":t[0]||(t[0]=e=>inputData.value=e),type:"textarea",placeholder:"请输入入参，以字符串的方式，如果是对象字符串会在执行时自动转换为对象再执行"},null,8,["modelValue"]),createVNode(a,{"class":"output",modelValue:outputData.value,"onUpdate:modelValue":t[1]||(t[1]=e=>outputData.value=e),type:"textarea",readonly:"",placeholder:"此处显示执行结果"},null,8,["modelValue"])])]),withDirectives((openBlock(),createBlock(r,{type:"primary",style:{"margin-top":"20px"},onClick:saveCode},{"default":withCtx((()=>[createTextVNode("保存脚本")])),_:1})),[[o,"save"]]),withDirectives((openBlock(),createBlock(r,{type:"primary",style:{"margin-top":"20px"},onClick:mock},{"default":withCtx((()=>[createTextVNode("调试")])),_:1})),[[o,"debug"]])],64)}}});var dataParse=_export_sfc(_sfc_main,[["__scopeId","data-v-29131462"]]);export{dataParse as default};